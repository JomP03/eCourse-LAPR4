@startuml

skinparam handwritten true
skinparam packageStyle rect
skinparam defaultFontName FG Virgil
skinparam shadowing false

left to right direction

package ui {
    class ListEnrollmentRequestsUI {
    }

    class ApproveEnrollmentRequestUI {
    }

    class RejectEnrollmentRequestUI {
    }

}

package enrollmentrequestmanagement {
    package application {
        class ListEnrollmentRequestsController {
            + listEnrollmentRequestController(enrollmentRequestRepository)
            + getCoursesOpenForEnrollment()
            + getEnrollmentRequestsForCourse()
        }

        class ApproveEnrollmentRequestController {
            + approveEnrollmentRequestController(enrollmentRequestRepository, registerEnrolledStudentController, rejectEnrollmentRequestController)
            - rejectEnrollmentRequest
            + approveEnrollmentRequest()
        }

        class RejectEnrollmentRequestController {
            + rejectEnrollmentRequestController(enrollmentRequestRepository)
            + rejectEnrollmentRequest()
        }

    }

    package domain {
        class EnrollmentRequest {
    }

    }

    package repository {
        interface EnrollmentRequestRepository {
            + findByCourseAndState(selectedCourse, state)
            +save(enrollmentRequest)
        }

    }
}

package coursemanagement {
    package application {
        class ListCoursesByStateService {
            + findCoursesByState(courseState)
        }
}
    interface CourseRepository {
        + findOpenForEnrollment()
    }

}

package enrolledstudentmanagement {
    package application {
        class RegisterEnrolledStudentController {
            + registerEnrolledStudentController(enrolledStudentRepository)
            + registerStudentInCourse(eCourseUser, course)
        }
    }


    package domain {
        class EnrolledStudent {
        }

        note top of EnrolledStudent
        EnrolledStudent is composed by eCourseUser
         and Course
        end note

        class EnrolledStudentBuilder {
            + withECourseUser(eCourseUser)
            + withCourse(course)
            + build()
        }
    }

    package repository {
        interface EnrolledStudentRepository {
            +save(enrolledStudent)
        }
    }
}

ListEnrollmentRequestsUI --> ApproveEnrollmentRequestUI
ListEnrollmentRequestsUI --> RejectEnrollmentRequestUI
ListEnrollmentRequestsUI --> ListEnrollmentRequestsController

ApproveEnrollmentRequestUI --> ApproveEnrollmentRequestController
RejectEnrollmentRequestUI --> RejectEnrollmentRequestController


ListEnrollmentRequestsController --> ListCoursesByStateService

ApproveEnrollmentRequestController -> EnrollmentRequest
RejectEnrollmentRequestController -> EnrollmentRequest

ApproveEnrollmentRequestController -> EnrollmentRequestRepository
RejectEnrollmentRequestController -> EnrollmentRequestRepository

ListCoursesByStateService -> CourseRepository

ApproveEnrollmentRequestController -> RegisterEnrolledStudentController

RegisterEnrolledStudentController -> EnrolledStudentRepository

RegisterEnrolledStudentController --> EnrolledStudent
RegisterEnrolledStudentController --> EnrolledStudentBuilder
EnrolledStudentBuilder --> EnrolledStudent

EnrolledStudentBuilder --> EnrolledStudentRepository

@enduml